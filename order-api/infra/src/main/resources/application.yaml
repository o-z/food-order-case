server:
  port: '8082'
management:
  server:
    port: '8083'
spring:
  application:
    name: order-api
  cloud:
    config:
      enabled: false
  kafka:
    consumer:
      group-id: order-api
      auto-offset-reset: latest
    bootstrap-servers: craftgate-kafka:29092
    topic:
      orderRollback: order-rollback
  redis:
    host: craftgate-redis
    port: 6379
    connect-timeout: 60
    database: 0
    password: eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
  flyway:
    schemas: CRAFT_GATE_ORDER
    user: root
    password: root
    url: ${FLYWAY_DATASOURCE_URL:jdbc:mysql://craftgate-order-mysql:3307/mysql}
    enabled: true
    baseline-on-migrate: true
  jpa:
    defer-datasource-initialization: 'false'
    show-sql: false
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    generate-ddl: true
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
  datasource:
    password: CRAFT_GATE_ORDER_USER
    username: CRAFT_GATE_ORDER_USER
    url: ${DATASOURCE_URL:jdbc:mysql://craftgate-order-mysql:3307/CRAFT_GATE_ORDER?useSSL=false&allowPublicKeyRetrieval=true}

springdoc:
  swagger-ui:
    path: /swagger-ui.html

microservice:
  product-api: ${PRODUCT_API_BASE_URL:http://restaurant-api:8080}
payment:
  gateway:
    type: ${PAYMENT_GATEWAY:CRAFTGATE}
craft-gate:
  api:
    baseUrl: ${CRAFT_GATE_BASE_URL:https://sandbox-api.craftgate.io}
    apiKey: ${CRAFT_GATE_API_KEY:sandbox-ocNNqeLVOsMquyqOVSKmYYgplaSZhhls}
    secretKey: ${CRAFT_GATE_SECRET_KEY:sandbox-encbFWAefCdnbkmLtPkiNWHPKknjSoQp}
